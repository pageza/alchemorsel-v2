/**\n * Test data fixtures for E2E tests\n */\n\n/**\n * Sample user data for testing\n */\nconst testUsers = {\n  standard: {\n    email: 'testuser@alchemorsel.com',\n    username: 'testuser',\n    password: 'TestPassword123!',\n    firstName: 'Test',\n    lastName: 'User',\n    dietaryPreferences: ['vegetarian'],\n    allergies: ['nuts']\n  },\n  \n  premium: {\n    email: 'premium@alchemorsel.com',\n    username: 'premiumuser',\n    password: 'PremiumPass123!',\n    firstName: 'Premium',\n    lastName: 'User',\n    dietaryPreferences: ['vegan', 'gluten-free'],\n    allergies: ['dairy', 'eggs']\n  },\n  \n  admin: {\n    email: 'admin@alchemorsel.com',\n    username: 'adminuser',\n    password: 'AdminPassword123!',\n    firstName: 'Admin',\n    lastName: 'User',\n    role: 'admin'\n  }\n};\n\n/**\n * Sample recipe data for testing\n */\nconst testRecipes = {\n  simple: {\n    title: 'Simple Pasta',\n    description: 'A quick and easy pasta dish perfect for weeknight dinners.',\n    category: 'Main Course',\n    cuisine: 'Italian',\n    prepTime: 10,\n    cookTime: 15,\n    servings: 4,\n    ingredients: [\n      '1 lb spaghetti pasta',\n      '2 cloves garlic, minced',\n      '1/4 cup olive oil',\n      '1/2 cup parmesan cheese',\n      'Salt and pepper to taste'\n    ],\n    instructions: [\n      'Boil water in a large pot and cook pasta according to package directions.',\n      'Heat olive oil in a large pan and sauté garlic until fragrant.',\n      'Drain pasta and add to the pan with garlic.',\n      'Toss with parmesan cheese and season with salt and pepper.',\n      'Serve immediately.'\n    ],\n    calories: 420,\n    protein: 15,\n    carbs: 65,\n    fat: 12,\n    tags: ['quick', 'easy', 'vegetarian'],\n    imageUrl: 'https://example.com/pasta.jpg'\n  },\n  \n  complex: {\n    title: 'Beef Wellington',\n    description: 'An elegant beef tenderloin wrapped in puff pastry with mushroom duxelles.',\n    category: 'Main Course',\n    cuisine: 'British',\n    prepTime: 45,\n    cookTime: 35,\n    servings: 6,\n    ingredients: [\n      '2 lb beef tenderloin',\n      '1 lb puff pastry',\n      '8 oz mushrooms, finely chopped',\n      '4 oz pâté',\n      '8 slices prosciutto',\n      '2 egg yolks',\n      '2 tbsp olive oil',\n      'Salt and pepper'\n    ],\n    instructions: [\n      'Season beef with salt and pepper, sear in hot oil until browned.',\n      'Let beef cool and brush with pâté.',\n      'Sauté mushrooms until moisture evaporates.',\n      'Lay out prosciutto, spread mushrooms, place beef on top.',\n      'Wrap tightly in plastic wrap and chill for 30 minutes.',\n      'Wrap in puff pastry, brush with egg wash.',\n      'Bake at 400°F for 25-30 minutes until golden.',\n      'Rest for 10 minutes before slicing.'\n    ],\n    calories: 650,\n    protein: 45,\n    carbs: 35,\n    fat: 35,\n    tags: ['advanced', 'special-occasion', 'beef'],\n    imageUrl: 'https://example.com/wellington.jpg'\n  },\n  \n  healthy: {\n    title: 'Quinoa Buddha Bowl',\n    description: 'A nutritious bowl packed with quinoa, vegetables, and tahini dressing.',\n    category: 'Salad',\n    cuisine: 'Mediterranean',\n    prepTime: 20,\n    cookTime: 15,\n    servings: 2,\n    ingredients: [\n      '1 cup quinoa',\n      '2 cups mixed greens',\n      '1 avocado, sliced',\n      '1 cup cherry tomatoes',\n      '1/2 cucumber, diced',\n      '1/4 cup tahini',\n      '2 tbsp lemon juice',\n      '1 tbsp olive oil'\n    ],\n    instructions: [\n      'Cook quinoa according to package directions.',\n      'Prepare vegetables while quinoa cooks.',\n      'Whisk together tahini, lemon juice, and olive oil for dressing.',\n      'Assemble bowls with quinoa, greens, and vegetables.',\n      'Drizzle with tahini dressing and serve.'\n    ],\n    calories: 380,\n    protein: 12,\n    carbs: 45,\n    fat: 18,\n    tags: ['healthy', 'vegan', 'gluten-free'],\n    imageUrl: 'https://example.com/buddha-bowl.jpg'\n  }\n};\n\n/**\n * AI generation prompts for testing\n */\nconst aiPrompts = {\n  simple: 'Create a quick 30-minute dinner recipe for chicken',\n  complex: 'I want to make an impressive dessert for a dinner party with chocolate and berries',\n  dietary: 'Make a vegan pasta dish that is also gluten-free and high in protein',\n  modification: 'Make this recipe dairy-free and add more vegetables',\n  cuisine: 'Create an authentic Thai curry recipe with coconut milk',\n  healthy: 'Design a low-calorie breakfast recipe with eggs and vegetables',\n  batch: 'Create a meal prep recipe that serves 8 people and can be frozen'\n};\n\n/**\n * Search queries for testing\n */\nconst searchQueries = {\n  common: [\n    'pasta',\n    'chicken',\n    'vegetarian',\n    'quick dinner',\n    'healthy lunch'\n  ],\n  specific: [\n    'gluten-free pasta',\n    'vegan chocolate cake',\n    'low-carb chicken',\n    'dairy-free dessert'\n  ],\n  empty: [\n    'xyz123nonexistent',\n    'abcdefghijklmnop',\n    'impossible recipe name'\n  ]\n};\n\n/**\n * Filter and sort options\n */\nconst filterOptions = {\n  categories: [\n    'appetizer',\n    'main-course',\n    'dessert',\n    'salad',\n    'soup',\n    'beverage'\n  ],\n  cuisines: [\n    'italian',\n    'mexican',\n    'asian',\n    'american',\n    'mediterranean',\n    'indian'\n  ],\n  dietaryPreferences: [\n    'vegetarian',\n    'vegan',\n    'gluten-free',\n    'dairy-free',\n    'nut-free',\n    'low-carb'\n  ],\n  sortOptions: [\n    'newest',\n    'oldest',\n    'most-popular',\n    'alphabetical',\n    'prep-time',\n    'calories'\n  ]\n};\n\n/**\n * Form validation test cases\n */\nconst validationTests = {\n  email: {\n    valid: [\n      'test@example.com',\n      'user.name@domain.co.uk',\n      'test+tag@gmail.com'\n    ],\n    invalid: [\n      'invalid-email',\n      '@domain.com',\n      'test@',\n      'test..test@domain.com'\n    ]\n  },\n  password: {\n    valid: [\n      'Password123!',\n      'SecurePass1$',\n      'MyP@ssw0rd'\n    ],\n    invalid: [\n      'weak',\n      'password',\n      '12345678',\n      'NoNumbers!',\n      'nonumbers123'\n    ]\n  },\n  username: {\n    valid: [\n      'testuser',\n      'user123',\n      'my_username'\n    ],\n    invalid: [\n      'a',\n      'ab',\n      'username-with-spaces',\n      'username@invalid'\n    ]\n  }\n};\n\n/**\n * Error scenarios for testing\n */\nconst errorScenarios = {\n  network: {\n    offline: 'Network offline simulation',\n    timeout: 'Request timeout simulation',\n    server500: 'Internal server error simulation',\n    server404: 'Resource not found simulation'\n  },\n  authentication: {\n    invalidCredentials: 'Wrong email/password combination',\n    expiredToken: 'Expired authentication token',\n    insufficientPermissions: 'User lacks required permissions'\n  },\n  validation: {\n    missingRequired: 'Required fields not filled',\n    invalidFormat: 'Invalid data format',\n    duplicateData: 'Duplicate entry attempt'\n  }\n};\n\n/**\n * Navigation test paths\n */\nconst navigationPaths = {\n  public: [\n    '/',\n    '/recipes',\n    '/recipes/123',\n    '/login',\n    '/register'\n  ],\n  protected: [\n    '/dashboard',\n    '/generate',\n    '/favorites',\n    '/profile/edit',\n    '/recipes/create'\n  ],\n  admin: [\n    '/admin',\n    '/admin/users',\n    '/admin/recipes'\n  ]\n};\n\n/**\n * Performance test data\n */\nconst performanceData = {\n  timeouts: {\n    pageLoad: 5000,\n    apiResponse: 3000,\n    userInteraction: 1000,\n    aiGeneration: 30000\n  },\n  thresholds: {\n    firstContentfulPaint: 2000,\n    largestContentfulPaint: 4000,\n    cumulativeLayoutShift: 0.1,\n    firstInputDelay: 100\n  }\n};\n\n/**\n * Device and viewport configurations\n */\nconst deviceConfigs = {\n  desktop: {\n    width: 1920,\n    height: 1080,\n    deviceScaleFactor: 1,\n    isMobile: false\n  },\n  laptop: {\n    width: 1366,\n    height: 768,\n    deviceScaleFactor: 1,\n    isMobile: false\n  },\n  tablet: {\n    width: 768,\n    height: 1024,\n    deviceScaleFactor: 2,\n    isMobile: true\n  },\n  mobile: {\n    width: 375,\n    height: 667,\n    deviceScaleFactor: 2,\n    isMobile: true\n  }\n};\n\n/**\n * Helper functions for generating test data\n */\nconst generators = {\n  /**\n   * Generate unique test user\n   */\n  generateUser(overrides = {}) {\n    const timestamp = Date.now();\n    return {\n      ...testUsers.standard,\n      email: `test${timestamp}@alchemorsel.com`,\n      username: `testuser${timestamp}`,\n      ...overrides\n    };\n  },\n\n  /**\n   * Generate unique recipe\n   */\n  generateRecipe(overrides = {}) {\n    const timestamp = Date.now();\n    return {\n      ...testRecipes.simple,\n      title: `Test Recipe ${timestamp}`,\n      description: `Test description for recipe ${timestamp}`,\n      ...overrides\n    };\n  },\n\n  /**\n   * Generate random search query\n   */\n  randomSearchQuery() {\n    const queries = [...searchQueries.common, ...searchQueries.specific];\n    return queries[Math.floor(Math.random() * queries.length)];\n  },\n\n  /**\n   * Generate random filter combination\n   */\n  randomFilters() {\n    return {\n      category: filterOptions.categories[Math.floor(Math.random() * filterOptions.categories.length)],\n      cuisine: filterOptions.cuisines[Math.floor(Math.random() * filterOptions.cuisines.length)],\n      dietary: filterOptions.dietaryPreferences[Math.floor(Math.random() * filterOptions.dietaryPreferences.length)]\n    };\n  }\n};\n\nmodule.exports = {\n  testUsers,\n  testRecipes,\n  aiPrompts,\n  searchQueries,\n  filterOptions,\n  validationTests,\n  errorScenarios,\n  navigationPaths,\n  performanceData,\n  deviceConfigs,\n  generators\n};