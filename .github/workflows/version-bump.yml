name: Version Bump and Release

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Version bump type'
        required: true
        type: choice
        options:
        - patch
        - minor
        - major
        default: 'patch'
      create_release:
        description: 'Create GitHub release'
        required: false
        type: boolean
        default: true
      push_tag:
        description: 'Push git tag'
        required: false
        type: boolean
        default: true

permissions:
  contents: write
  packages: write

jobs:
  version-bump:
    name: Bump Version and Create Release
    runs-on: ubuntu-latest
    outputs:
      new-version: ${{ steps.bump.outputs.version }}
      tag-name: ${{ steps.bump.outputs.tag }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
    
    - name: Make version script executable
      run: chmod +x scripts/version.sh
    
    - name: Bump version
      id: bump
      run: |
        # Run the version bump
        NEW_VERSION=$(./scripts/version.sh bump ${{ github.event.inputs.bump_type }})
        echo "New version: $NEW_VERSION"
        echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "tag=v$NEW_VERSION" >> $GITHUB_OUTPUT
        
        # Generate changelog
        ./scripts/version.sh changelog "$NEW_VERSION"
    
    - name: Commit version bump
      run: |
        git add VERSION docker-compose.yml frontend/package.json ui-tests/package.json CHANGELOG.md
        git commit -m "chore: release v${{ steps.bump.outputs.version }}

ðŸ¤– Generated with [Claude Code](https://claude.ai/code)

Co-Authored-By: Claude <noreply@anthropic.com>"
    
    - name: Create and push tag
      if: github.event.inputs.push_tag == 'true'
      run: |
        git tag -a "v${{ steps.bump.outputs.version }}" -m "Release v${{ steps.bump.outputs.version }}"
        git push origin main
        git push origin "v${{ steps.bump.outputs.version }}"
    
    - name: Update docker-compose.yml with new version
      run: |
        echo "Updated docker-compose.yml with version v${{ steps.bump.outputs.version }}"
        cat docker-compose.yml | grep "image:" | head -2

  trigger-release:
    name: Trigger Release Build
    runs-on: ubuntu-latest
    needs: version-bump
    if: github.event.inputs.create_release == 'true' && github.event.inputs.push_tag == 'true'
    
    steps:
    - name: Wait for tag to be available
      run: |
        echo "Waiting for tag ${{ needs.version-bump.outputs.tag-name }} to be available..."
        sleep 10
    
    - name: Trigger release workflow
      run: |
        echo "Release workflow will be automatically triggered by the new tag: ${{ needs.version-bump.outputs.tag-name }}"
        echo "The release.yml workflow will build and push Docker images with the new version."